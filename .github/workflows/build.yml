
name: Build and Push Docker Image

on:
  push:
    branches:
      - main # Adjusted from master to main, assuming 'main' is your primary branch

jobs:
  build_and_push:
    runs-on: ubuntu-latest
    permissions:
      contents: read # Required to checkout the repository
      packages: write # Required to push packages to GitHub Container Registry

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js and pnpm
        uses: actions/setup-node@v4
        with:
          node-version: '20' # Should match the Node version in Dockerfile
          cache: 'pnpm' # Use pnpm for caching

      - name: Install pnpm
        run: npm install -g pnpm # Ensure pnpm is available

      - name: Install dependencies with pnpm
        run: pnpm install --frozen-lockfile
        # If you don't have a pnpm-lock.yaml, you might want to run `pnpm import && pnpm install --frozen-lockfile`
        # or simply `pnpm install` if no lockfile is present yet.
        # Ensure pnpm-lock.yaml is committed to your repository.

      - name: Build Next.js app (optional pre-check)
        run: npm run build # This uses the script from package.json, which calls `next build`
        env:
          NEXT_TELEMETRY_DISABLED: 1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository }} # e.g., ghcr.io/your-username/your-repo-name

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
